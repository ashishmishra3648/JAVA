NON-PRIMITIVE TYPE CASTING :
>UPCASTING
>DOWNCASTING

---------------------------------------------------------------------------------------------
Vehicle.java

package UpCasting;

public class Vehicle {
	public static class Bike extends Vehicle{
		
	}
	public static class Car extends Vehicle{
		
	}
	public static class RE extends Bike{
		
	}
	public static class Duke extends Bike{
		
	}
	public static class Punch extends Car{
		
	}
	public static class Thar extends Car{
		
	}

}
---------------------------------------------------------------------------
Driver.java

package UpCasting;

import UpCasting.Vehicle.Car;
import UpCasting.Vehicle.Bike;
import UpCasting.Vehicle.RE;
import UpCasting.Vehicle.Duke;
import UpCasting.Vehicle.Punch;
import UpCasting.Vehicle.Thar;
import UpCasting.Vehicle;



public class Driver {
	public static void driver_1(Car c){
		System.out.println("Driving Car");
		}
	public static void driver_2(Bike B){
		System.out.println("Driving Bike");
	}
	public static void driver_3(Vehicle v){
		System.out.println("Driving...");
	}
	public static void main(String[] args) {
		driver_1(new Punch());
		driver_1(new Thar());
		//driver_1(new RE());
		
		driver_2(new RE());
		driver_2(new Duke());
		//driver_2(new Thar());
		
		driver_3(new Duke());
		driver_3(new Punch());
		
	}

}


------------------------------------------------------------------------------------
Demo.java

package UpCasting;

import UpCasting.Vehicle.Bike;

class A{
	
}
class B extends A{}
class C extends Object{}
class D extends C{}

public class Demo {
	public static void m1(Object o) {
		System.out.println("m1() called");
	}
	
	public static Vehicle m2() {
		return new Vehicle();
	}
	
	public static void main(String[] args) {
		m1(new A());  //UPCASTING
		m1(new B()); //UPCASTING
		m1(new C()); //UPCASTING
		m1(new D()); //UPCASTING
		
		Vehicle v=m2(); //UPCASTING
		//Bike b=m2();
	}

}


---------------------------------------------------------------------------------------

